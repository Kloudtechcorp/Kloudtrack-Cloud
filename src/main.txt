#include <Arduino.h>
#include "Config.h"
#include "WiFiManager.h"
#include "MQTTClient.h"
#include "OTAUpdater.h"
#include "WeatherSensor.h"
#include "DeviceManager.h"

// Global instances
Config* config;
WiFiManager* wifiManager;
MQTTClient* mqttClient;
DeviceManager* deviceManager;
WeatherSensor* weatherSensor;
OTAUpdater* otaUpdater;

void setup() {
    Serial.begin(115200);
    delay(1000);
    
    // Initialize configuration
    config = new Config();
    
    // Print device information
    Serial.println("\n\n---------------------------------");
    Serial.println("ESP32 Weather Station with AWS IoT");
    Serial.printf("Device ID: %s\n", config->getDeviceId());
    Serial.printf("Current Firmware Version: %s\n", config->getFirmwareVersion());
    Serial.println("---------------------------------\n");

    // Initialize components
    deviceManager = new DeviceManager(config);
    wifiManager = new WiFiManager(config);
    otaUpdater = new OTAUpdater(config, deviceManager);
    weatherSensor = new WeatherSensor(config);
    
    // MQTT client needs references to other components to handle commands
    mqttClient = new MQTTClient(config, deviceManager, otaUpdater, weatherSensor);
    
    // Connect to WiFi
    wifiManager->connect();

    // Connect to AWS IoT
    mqttClient->connect();

    // Publish initial weather data if device is activated
    if (deviceManager->isActivated()) {
        weatherSensor->publishData(mqttClient);
    }
}

void loop() {
    // Ensure WiFi connection
    if (!wifiManager->isConnected()) {
        wifiManager->connect();
    }

    // Ensure MQTT connection
    if (!mqttClient->isConnected()) {
        mqttClient->connect();
    }
    
    // Process MQTT messages
    mqttClient->loop();

    // Publish weather data at regular intervals
    weatherSensor->update(mqttClient, deviceManager->isActivated());
    
    delay(10);
}